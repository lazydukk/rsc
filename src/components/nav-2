import Link from "next/link";
import { NextRouter, useRouter } from "next/router";
import { FC } from "react";
import { clsx } from "clsx";
import { signIn, signOut, useSession } from "next-auth/react";

import { trpc } from "../utils/trpc";

const NavItem: FC<{ href: string; text: string; router: NextRouter }> = ({
  href,
  text,
  router,
}) => {
  const isActive = router.pathname === (href === "/home" ? "/" : href);

  return (
    <Link legacyBehavior href={href === "/home" ? "/" : href}>
      <a
        className={clsx(
          "text-2xl mr-80 md:mr-20 font-bold",
          isActive
            ? "text-[hsl(280,100%,80%)]"
            : "transition-colors duration-300 hover:text-transparent bg-clip-text bg-gradient-to-r from-[hsl(280,100%,70%)] to-blue-400"
        )}
      >
        {text}
      </a>
    </Link>
  );
};

const Navbar = () => {

  return (
    <>
    <div className="flex justify-end">

    <div className="justify-end -mt-11 mr-3.5">
    <AuthShowcase />
    </div>
    </div>
    </>
  );
};

export default Navbar;

const AuthShowcase: React.FC = () => {
  const { data: sessionData } = useSession();

  const { data: secretMessage } = trpc.auth.getSecretMessage.useQuery(
    undefined, // no input
    { enabled: sessionData?.user !== undefined },
  );

  return (
    <div className="flex flex-col items-center justify-center gap-4">
      <button
        className="rounded-full bg-white/10 px-10 py-3 font-semibold text-white no-underline transition hover:bg-white/20"
        onClick={sessionData ? () => signOut() : () => signIn()}
      >
        {sessionData ? "Sign out" : "Sign in"}
      </button>
    </div>
  );
};
